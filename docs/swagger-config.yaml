openapi: 3.0.0
info:
  title: Members-Only API
  description: A Sample API mimicking a social media platform, it allows members to access only authorized resources. .
  version: 1.0.0

servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing

components:
  schemas:
    User:
      type: "object"
      properties:
        _id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
        avatar:
          type: "string"
        lastLogin:
          type: "string"
          format: "date-time"
        isAdmin:
          type: "boolean"
        isMember:
          type: "boolean"
        resetPassword:
          type: "object"
          properties:
            code:
              type: "string"
            expiresBy:
              type: "string"
              format: "date-time"
        refreshToken:
          type: "object"
          properties:
            token:
              type: "string"
            expiresBy:
              type: "string"
              format: "date-time"
        tokenVersion:
          type: "integer"
        createdAt:
          type: "string"
          format: "date-time"
        updatedAt:
          type: "string"
          format: "date-time"
    Profile:
      type: "object"
      properties:
        _id:
          type: "integer"
          format: "int64"
        user:
          $ref: "#/components/schemas/User"
        bio:
          type: "string"
        address:
          type: "string"
        phoneNumber:
          type: "integer"
          format: "int64"
        education:
          type: "array"
          items:
            type: "object"
            properties:
              school:
                type: "string"
              degree:
                type: "string"
              field:
                type: "string"
              from:
                type: "string"
                format: "date-time"
              to:
                type: "string"
                format: "date-time"
              description:
                type: "string"
        social:
          type: "object"
          properties:
            github:
              type: "string"
            linkedin:
              type: "string"
            twitter:
              type: "string"
    Post:
      type: "object"
      properties:
        _id:
          type: "integer"
          format: "int64"
        user:
          $ref: "#/components/schemas/User"
        post_content:
          type: "string"
        date_posted:
          type: "string"
          format: "date-time"
        comments:
          type: "array"
          items:
            type: "object"
            properties:
              comment_user:
                $ref: "#/components/schemas/User"
              comment_list:
                type: "array"
                items:
                  type: "object"
                  properties:
                    comment:
                      type: "string"
                    comment_date:
                      type: "string"
                      format: "date-time"
  securitySchemes:
    BearerAuth:
      type: "http"
      scheme: "bearer"
      bearerFormat: "JWT"
    cookieAuth:
      type: "apiKey"
      in: "cookie"
      name: "jit"
  responses:
    404NotFound:
      description: "The specified resource was not found"
    500ServerError:
      description: "Internal Server Error"